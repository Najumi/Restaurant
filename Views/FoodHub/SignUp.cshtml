
@{
    ViewBag.Title = "SignUp";
}
<link href="~/Content/SignUp.css" rel="stylesheet" type="text/css" />
<div class="container">
    <div class="signUp-content">
        <div class="signUp-form">
            <div id="validation-success"></div>
            @(Html.Kendo().Form<Restaurant.ViewModel.AddUser>()
            .Name("formExample")
            .HtmlAttributes(new { action = "SignIn", method = "POST" })
            .Validatable(v =>
            {
                v.ValidateOnBlur(true);
                v.ValidationSummary(vs => vs.Enable(false));
            })
            .Items(items =>
            {
                items.AddGroup()
                .Label("Registration Form")
                .Items(i =>
                {
                    i.Add()
                         .Field(f => f.FirstName)

                         .Label(l => l.Text("First Name:"))
                         .Id("Firstname")
                         .EditorTemplateHandler("firstNameEditor") ;
                    i.Add()
                        .Field(f => f.LastName)
                        .Label(l => l.Text("Last Name:"))
                        .Id("Lastname")
                        .EditorTemplateHandler("lastNameEditor");
                    i.Add()
                        .Field(f => f.Email)
                        .Label(l => l.Text("Email:"))
                        .Id("email")
                        .EditorTemplateHandler("emailEditor");
                    i.Add()
                        .Field(f => f.PhoneNo_)
                        .Label(l => l.Text("Phone no.:"))
                        .Id("phone")
                        .EditorTemplateHandler("phoneEditor");
                    i.Add()
                        .Field(f => f.Password)
                        .Label(l => l.Text("Password:"))
                        .Id("password")
                        .Hint("Hint: enter alphanumeric characters only.")
                        .EditorTemplateHandler("setPasswordEditor");
                });
            })
            .Events(ev => ev.ValidateField("onFormValidateField").Submit("onFormSubmit").Clear("onFormClear"))
            )
        </div>
    </div>
    <div class="signUp-content">
        <div class="signUp-Image">
            <figure><img src="~/Content/Images/test2.jpg" alt="sing up image"></figure>
            <span class="link">
                @Html.ActionLink("Already have an account", "SignIn", "FoodHub", new { area = "" }, null)
            </span>
        </div>
    </div>
</div>


<script src="~/Scripts/SignUp.js"></script>    


